services:
  # ---- Django API (Docker) ----
  - type: web
    name: pricing-intel-api
    env: docker
    rootDir: .
    dockerfilePath: backend/Dockerfile
    autoDeploy: true
    healthCheckPath: /api/health/
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: "*"           # tighten later
      - key: DATABASE_URL
        fromDatabase:
          name: pricing-intel-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      # Uncomment if using the LLM endpoint
      # - key: OPENAI_API_KEY
      #   sync: false
    postDeployCommand: >
      python manage.py migrate &&
      python manage.py collectstatic --noinput

  # ---- Celery worker ----
  - type: worker
    name: pricing-intel-celery
    env: docker
    rootDir: .
    dockerfilePath: backend/Dockerfile
    startCommand: celery -A config worker -l info
    autoDeploy: true
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings
      - key: SECRET_KEY
        sync: false
      - key: DEBUG
        value: "False"
      - key: DATABASE_URL
        fromDatabase:
          name: pricing-intel-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      # - key: OPENAI_API_KEY
      #   sync: false

  # ---- Static frontend (Vite â†’ dist) ----
  - type: static_site
    name: pricing-intel-web
    rootDir: frontend
    buildCommand: npm ci && npm run build
    staticPublishPath: dist
    envVars:
      # Option A (direct calls): set this to your API URL after first deploy
      # - key: VITE_API_BASE
      #   value: https://pricing-intel-api.onrender.com/api
      #
      # Option B (same-origin via proxy rule below):
      - key: VITE_API_BASE
        value: /api
    routes:
      # Proxy API calls from the static site to the API service (same-origin feel)
      - type: rewrite
        source: /api/*
        destination: https://pricing-intel-api.onrender.com/api/:splat
      # SPA fallback for React Router
      - type: rewrite
        source: /.*
        destination: /index.html

  # ---- Redis (managed) ----
  - type: redis
    name: pricing-intel-redis
    plan: free
    ipAllowList: []

databases:
  - name: pricing-intel-db
    plan: free
