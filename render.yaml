services:
  # ---- Django API (Docker) ----
  - type: web
    name: pricing-intel-api
    env: docker
    rootDir: .
    dockerfilePath: backend/Dockerfile
    autoDeploy: true
    healthCheckPath: /api/health/
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings
      - key: SECRET_KEY
        generateValue: true
      - key: DEBUG
        value: "False"
      - key: ALLOWED_HOSTS
        value: "*"      # tighten later
      - key: DATABASE_URL
        fromDatabase:
          name: pricing-intel-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      # If your Celery uses these names:
      - key: CELERY_BROKER_URL
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
    # Run migrations + collectstatic after each deploy
    postDeployCommand: >
      python manage.py migrate &&
      python manage.py collectstatic --noinput

  # ---- Celery worker (same image, different start command) ----
  - type: worker
    name: pricing-intel-celery
    env: docker
    rootDir: .
    dockerfilePath: backend/Dockerfile
    startCommand: celery -A config worker -l info
    autoDeploy: true
    envVars:
      - key: DJANGO_SETTINGS_MODULE
        value: config.settings
      - key: SECRET_KEY
        sync: false   # it will inherit same value if present, or set again manually
      - key: DEBUG
        value: "False"
      - key: DATABASE_URL
        fromDatabase:
          name: pricing-intel-db
          property: connectionString
      - key: REDIS_URL
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      - key: CELERY_BROKER_URL
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString
      - key: CELERY_RESULT_BACKEND
        fromService:
          name: pricing-intel-redis
          type: redis
          property: connectionString

  # ---- Static frontend (Vite build -> dist) ----
  - type: static
    name: pricing-intel-web
    rootDir: frontend
    buildCommand: npm ci && npm run build
    staticPublishPath: dist
    envVars:
      # You will fill this AFTER the API URL is known (step 3)
      - key: VITE_API_BASE
        value: https://REPLACE_WITH_API_DOMAIN/api

  # ---- Redis (managed) ----
  - type: redis
    name: pricing-intel-redis
    plan: free
    ipAllowList: []

databases:
  - name: pricing-intel-db
    plan: free
